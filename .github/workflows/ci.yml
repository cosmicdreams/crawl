name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 9 * * 1' # Every Monday at 9 AM UTC
  workflow_dispatch: # Allows manual triggering

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps chromium
    
    - name: Run Playwright tests
      run: npx playwright test
    
    - name: Upload Playwright HTML report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

    - name: Deploy Playwright report to GitHub Pages
      if: always()
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./playwright-report
        # Optional: publish_branch: gh-pages (default)
        # Optional: cname: your.custom.domain.com

    - name: Upload test results (JUnit, etc. if configured)
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results # This might contain JUnit XML or other formats
        path: test-results/ # Adjust if your Playwright config outputs other reports here
        retention-days: 30
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./coverage/
        fail_ci_if_error: false
        verbose: true

  lint:
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run ESLint
      run: npx eslint .

  update-packages:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Update dependencies
      run: npm update
      
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore(deps): update dependencies'
        title: 'chore(deps): update dependencies'
        body: |
          Updates dependencies to their latest versions.
          
          This PR is automatically generated.
        branch: chore/update-dependencies
        delete-branch: true
